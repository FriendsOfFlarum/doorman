{"version":3,"sources":["webpack://@reflar/doorman/webpack/bootstrap","webpack://@reflar/doorman/external \"flarum.core.compat['app']\"","webpack://@reflar/doorman/external \"flarum.core.compat['Model']\"","webpack://@reflar/doorman/external \"flarum.core.compat['extend']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Switch']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Button']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Select']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/AdminNav']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Page']\"","webpack://@reflar/doorman/external \"flarum.core.compat['Component']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Badge']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/mixin']\"","webpack://@reflar/doorman/external \"flarum.core.compat['models/forum']\"","webpack://@reflar/doorman/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@reflar/doorman/./src/admin/components/DoormanSettingsListItem.js","webpack://@reflar/doorman/./src/admin/components/SettingsPage.js","webpack://@reflar/doorman/./src/admin/models/Doorkey.js","webpack://@reflar/doorman/./src/admin/index.js","webpack://@reflar/doorman/./src/admin/addSettingsPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","DoormanSettingsListItem","view","this","doorkey","props","doorkeys","remaining","maxUses","uses","className","type","disabled","placeholder","app","translator","trans","onchange","withAttr","updateKey","Select","component","options","getGroupsForInput","updateGroupId","groupId","updateMaxUses","Switch","state","activates","updateActivates","Button","icon","onclick","deleteDoorkey","Badge","label","transChoice","join","config","isInitialized","$","tooltip","container","store","all","map","group","nameSingular","id","save","doorkeyToDelete","_this","some","data","splice","Component","DoormanSettingsPage","init","_Page","loading","switcherLoading","isOptional","settings","prop","generateRandomKey","LoadingIndicator_default","a","oninput","createDoorkey","Switch_default","toggleOptional","Array","Math","random","toString","slice","_this2","createRecord","then","push","redraw","_this3","reflar.doorman.allowPublic","JSON","stringify","saveSettings","parse","Page","Doorkey","apiEndpoint","exists","mixin","Model","attribute","initializers","add","models","routes","path","SettingsPage","extensionSettings","route","extend","AdminNav","items","AdminLinkButton","href","children","description"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['models/forum'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Badge from 'flarum/components/Badge';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\n\nexport default class DoormanSettingsListItem extends Component {\n    view() {\n        this.doorkey = this.props.doorkey;\n        this.doorkeys = this.props.doorkeys;\n\n        var remaining = this.doorkey.maxUses() - this.doorkey.uses();\n\n        return (\n            <div className=\"DoormanSettingsListItem\">\n                <div className=\"DoormanSettingsListItem-inputs\">\n                    <input\n                        className=\"FormControl Doorkey-key\"\n                        type=\"text\"\n                        disabled\n                        value={this.doorkey.key()}\n                        placeholder={app.translator.trans('reflar-doorman.admin.page.doorkey.key')}\n                        onchange={m.withAttr('value', this.updateKey.bind(this, this.doorkey))}\n                    />\n                    {Select.component({\n                        options: this.getGroupsForInput(),\n                        className: 'Doorkey-select',\n                        onchange: this.updateGroupId.bind(this, this.doorkey),\n                        value: this.doorkey.groupId() || 3,\n                    })}\n                    <input\n                        className=\"FormControl Doorkey-maxUses\"\n                        value={this.doorkey.maxUses() || '0'}\n                        type=\"number\"\n                        placeholder={app.translator.trans('reflar-doorman.admin.page.doorkey.max_uses')}\n                        onchange={m.withAttr('value', this.updateMaxUses.bind(this, this.doorkey))}\n                    />\n                    {Switch.component({\n                        state: this.doorkey.activates() || false,\n                        onchange: this.updateActivates.bind(this, this.doorkey),\n                        className: 'Doorkey-switch',\n                    })}\n                </div>\n                \n                {Button.component({\n                    type: 'button',\n                    className: 'Button Button--warning Doorkey-button',\n                    icon: 'fa fa-times',\n                    onclick: this.deleteDoorkey.bind(this, this.doorkey),\n                })}\n\n                {this.doorkey.maxUses() === this.doorkey.uses()\n                    ? Badge.component({\n                        className: 'Doorkey-badge',\n                        icon: 'fas fa-user-slash',\n                        label: app.translator.trans('reflar-doorman.admin.page.doorkey.warning'),\n                    })\n                    : this.doorkey.uses() !== 0 ? (\n                        <div>\n                            <h3 className=\"Doorkey-left\">{app.translator.transChoice('reflar-doorman.admin.page.doorkey.used_times',\n                                remaining,\n                                {remaining}).join('')}\n                            </h3>\n                        </div>\n                    ) : ''}\n            </div>\n        );\n    }\n\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        $('.fa-exclamation-cricle').tooltip({container: 'body'});\n    }\n\n    getGroupsForInput() {\n        let options = [];\n\n        app.store.all('groups').map(group => {\n            if (group.nameSingular() === 'Guest') {\n                return;\n            }\n            options[group.id()] = group.nameSingular();\n        });\n\n        return options;\n    }\n\n    updateKey(doorkey, key) {\n        doorkey.save({key});\n    }\n\n    updateGroupId(doorkey, groupId) {\n        doorkey.save({groupId});\n    }\n\n    updateMaxUses(doorkey, maxUses) {\n        doorkey.save({maxUses});\n    }\n\n    updateActivates(doorkey, activates) {\n        doorkey.save({activates});\n    }\n\n    deleteDoorkey(doorkeyToDelete) {\n        doorkeyToDelete.delete();\n        this.doorkeys.some((doorkey, i) => {\n            if (doorkey.data.id === doorkeyToDelete.data.id) {\n                this.doorkeys.splice(i, 1);\n                return true;\n            }\n        });\n    }\n}\n","import Page from 'flarum/components/Page';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport DoormanSettingsListItem from './DoormanSettingsListItem';\nimport Button from 'flarum/components/Button';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport app from 'flarum/app';\nimport saveSettings from 'flarum/utils/saveSettings';\n\nexport default class DoormanSettingsPage extends Page {\n    init() {\n        super.init();\n\n        this.loading = false;\n        this.switcherLoading = false;\n        this.doorkeys = app.store.all('doorkeys');\n        this.isOptional = app.data.settings['reflar.doorman.allowPublic'];\n\n        this.doorkey = {\n            key: m.prop(this.generateRandomKey()),\n            groupId: m.prop(3),\n            maxUses: m.prop(10),\n            activates: m.prop(false),\n        };\n    }\n\n    view() {\n        return (\n            <div className=\"container Doorkey-container\">\n                <h1>Doorman</h1>\n                {this.loading ? <LoadingIndicator /> : ''}\n                <div className=\"Doorkeys-title\">\n                    <h2>{app.translator.trans('reflar-doorman.admin.page.doorkey.title')}</h2>\n                    <div className=\"helpText\">{app.translator.trans('reflar-doorman.admin.page.doorkey.help.key')}</div>\n                    <div className=\"helpText\">{app.translator.trans('reflar-doorman.admin.page.doorkey.help.group')}</div>\n                    <div className=\"helpText\">{app.translator.trans('reflar-doorman.admin.page.doorkey.help.max')}</div>\n                    <div className=\"helpText\">{app.translator.trans('reflar-doorman.admin.page.doorkey.help.activates')}</div>\n                </div>\n                <div className=\"Doorkeys-fieldLabels\">\n                    <h3 className=\"key\">{app.translator.trans('reflar-doorman.admin.page.doorkey.heading.key')}</h3>\n                    <h3 className=\"group\">{app.translator.trans('reflar-doorman.admin.page.doorkey.heading.group')}</h3>\n                    <h3 className=\"maxUses\">{app.translator.trans('reflar-doorman.admin.page.doorkey.heading.max_uses')}</h3>\n                    <h3 className=\"activate\">{app.translator.trans('reflar-doorman.admin.page.doorkey.heading.activate')}</h3>\n                </div>\n                <div className=\"Doorkeys\">\n                    {this.doorkeys.map(doorkey => {\n                        return DoormanSettingsListItem.component({ doorkey, doorkeys: this.doorkeys });\n                    })}\n                </div>\n                <div className=\"Doorkeys-new\">\n                    <div className=\"Doorkeys-newInputs\">\n                        <input\n                            className=\"FormControl Doorkey-key\"\n                            type=\"text\"\n                            value={this.doorkey.key()}\n                            placeholder={app.translator.trans('reflar-doorman.admin.page.doorkey.key')}\n                            oninput={m.withAttr('value', this.doorkey.key)}\n                        />\n                        {Select.component({\n                            options: this.getGroupsForInput(),\n                            className: 'Doorkey-select',\n                            onchange: this.doorkey.groupId,\n                            value: this.doorkey.groupId(),\n                        })}\n                        <input\n                            className=\"FormControl Doorkey-maxUses\"\n                            value={this.doorkey.maxUses()}\n                            type=\"number\"\n                            placeholder={app.translator.trans('reflar-doorman.admin.page.doorkey.max_uses')}\n                            oninput={m.withAttr('value', this.doorkey.maxUses)}\n                        />\n                        {Switch.component({\n                            state: this.doorkey.activates() || false,\n                            onchange: this.doorkey.activates,\n                            className: 'Doorkey-switch',\n                        })}\n                    </div>\n                    {Button.component({\n                        type: 'button',\n                        className: 'Button Button--warning Doorkey-button',\n                        icon: 'fa fa-plus',\n                        onclick: this.createDoorkey.bind(this),\n                    })}\n                </div>\n                <div className=\"Doorkey-allowPublic\">\n                    <h2>{app.translator.trans('reflar-doorman.admin.page.doorkey.allow-public.title')}</h2>\n                    {this.switcherLoading ? (\n                        <LoadingIndicator />\n                    ) : (\n                        <Switch state={this.isOptional} onchange={this.toggleOptional.bind(this)} className=\"AllowPublic-switch\">\n                            {app.translator.trans('reflar-doorman.admin.page.doorkey.allow-public.switch-label')}\n                        </Switch>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    getGroupsForInput() {\n        let options = [];\n\n        app.store.all('groups').map(group => {\n            if (group.nameSingular() === 'Guest') {\n                return;\n            }\n            options[group.id()] = group.nameSingular();\n        });\n\n        return options;\n    }\n\n    generateRandomKey() {\n        return Array(8 + 1)\n            .join((Math.random().toString(36) + '00000000000000000').slice(2, 18))\n            .slice(0, 8);\n    }\n\n    createDoorkey() {\n        app.store\n            .createRecord('doorkeys')\n            .save({\n                key: this.doorkey.key(),\n                groupId: this.doorkey.groupId(),\n                maxUses: this.doorkey.maxUses(),\n                activates: this.doorkey.activates(),\n            })\n            .then(doorkey => {\n                this.doorkey.key(this.generateRandomKey());\n                this.doorkey.groupId(3);\n                this.doorkey.maxUses(10);\n                this.doorkey.activates('');\n                this.doorkeys.push(doorkey);\n                m.redraw();\n            });\n    }\n\n    toggleOptional() {\n        this.switcherLoading = true;\n        const settings = {\n            'reflar.doorman.allowPublic': JSON.stringify(!this.isOptional),\n        };\n        saveSettings(settings)\n            .then(() => {\n                this.isOptional = JSON.parse(app.data.settings['reflar.doorman.allowPublic']);\n            })\n            .catch(() => {})\n            .then(() => {\n                this.switcherLoading = false;\n                m.redraw();\n            });\n    }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Doorkey extends mixin(Model, {\n    id: Model.attribute('id'),\n    key: Model.attribute('key'),\n    groupId: Model.attribute('groupId'),\n    maxUses: Model.attribute('maxUses'),\n    uses: Model.attribute('uses'),\n    activates: Model.attribute('activates'),\n}) {\n    apiEndpoint() {\n        return `/reflar/doorkeys${this.exists ? `/${this.data.id}` : ''}`;\n    }\n}\n","import app from 'flarum/app';\nimport forum from 'flarum/models/forum';\nimport addSettingsPage from './addSettingsPage';\nimport Doorkey from './models/Doorkey';\n\napp.initializers.add('reflar-doorman', () => {\n    app.store.models.doorkeys = Doorkey;\n\n    addSettingsPage();\n});\n","import { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport SettingsPage from './components/SettingsPage';\n\nexport default function() {\n    app.routes['reflar-doorman'] = {\n        path: '/reflar/doorman',\n        component: SettingsPage.component(),\n    };\n\n    app.extensionSettings['reflar-doorman'] = () => m.route(app.route('reflar-doorman'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add(\n            'reflar-doorman',\n            AdminLinkButton.component({\n                href: app.route('reflar-doorman'),\n                icon: 'fa fa-door-closed',\n                children: 'Doorman',\n                description: app.translator.trans('reflar-doorman.admin.nav.desc'),\n            })\n        );\n    });\n}\n"],"sourceRoot":""}